线性筛(例题,204)
集合& |  ^(对称差集)
set.remove(element)    里面没有会报错
set.discard(element)    没有不报错


list   del listname[index]  remove() 方法只会删除第一个和指定值相同的元素，而且必须保证该元素是存在的
list.clear 删除列表的所有元素

列表不可哈希,所以用in的时候可以先转换成set再in

二分查找法import bisect
bisect(list,target), bisect_left()和bisect_right()->index
如果列表中没有元素x，那么bisect_left(ls, x)和bisect_right(ls, x)返回相同的值，该值是x在ls中“合适的插入点索引，使得数组有序”
如果列表中存在多个元素等于x，那么bisect_left(ls, x)返回最左边的那个索引,bisect_right(ls, x)返回最右边的那个索引加1

python //地板除法,在负数的时候也是如此,所以如果需要向零取整负数的时候,可以int(num1/float(num2))
floor(-1.5)=-1

''.join(str)

Python swapcase() 方法用于对字符串的大小写字母进行转换，即将大写字母转换为小写字母，小写字母会转换为大写字母。

itertools.combinations(a,b:int)
对a挑选出b个元素进行排列组合

defaultdict是python内建dict类的一个字类，功能与dict相同，但它带有一个默认的值，若key值不存在时返回一个默认的值。


ord() 返回ASCII值
bin() 二进制

/ 返回浮点值

set()   add 和 pop


字典遍历是
for i in dict.keys()
for i in dict.values()
for key,value in dict.items()

list--> cmp(A,B) function is used to compare the size of two elements

all() 函数用于判断给定的可迭代参数 iterable 中的所有元素是否都为 TRUE，如果是返回 True，否则返回 False。
元素除了是 0、空、None、False 外都算 True。


str.find('x')  return the letter's index

math.gcd(i,j)  求最大公约数
math.perm(n,k)  方法返回不重复且有顺序地从 n 项中选择 k 项的方式总数。
k 参数是可选的。 如果我们没有设置 k，这个方法将返回 n!


abs()   divmod()->返回商和余数    round()->四舍五入
hex()   oct()   bin()   bool()  ord()
all()   any()   map()函数： 通过自定义函数实现对序列的元素映射操作并返回操作后的结果
format()->格式化数据
"{} {}".format("hello", "world")
print("{:.2f}".format(3.1415926));

string.count(str,beg=0,end=len(string))
string.endswith()
string.find(str,beg,end)不存在返回-1
string.index(str,beg,end)不存在会报异常
string.join(seq)以 string 作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串
string.strip([obj])

string.upper()     string.lower()         string.swapcase()

总结一下Counter,里面是按照从大到小的顺序进行排列,但是遍历的时候却不是(哈希原因?,或者是字典序)
所以可以进行转换排序一下,
sorted(cnt.items(),key=lambda x:x[1],reverse=True) 从大到小的顺序进行排列,返回值是元素为元组的列表
[('a',11),('b',2)]这种
反转了,可以用most_common()->返回元组列表

染色问题
邻接表


Counter.elements()
返回一个迭代器，其中每个元素将重复出现计数值所指定次。 元素会按首次出现的顺序返回。 如果一个元素的计数值小于1，elements() 将会忽略它。
c = Counter(a=4, b=2, c=0, d=-2)
list(c.elements())7
['a', 'a', 'a', 'a', 'b', 'b']

Counter.most_common()
返回一个列表，其中包含n个最常见的元素及出现次数，按常见程度由高到低排序。 如果 n 被省略或为None，most_common() 将返回计数器中的所有元素，计数值相等的元素按首次出现的顺序排序，经常用来计算top词频的词语。
Counter('abracadabra').most_common(3)
[('a', 5), ('b', 2), ('r', 2)]


deque
append()
appendleft()
clear()
copy()
count()  计算 deque 中元素等于 x 的个数。
extend()  扩展deque的右侧，通过添加iterable参数中的元素
        #与append 的区别
        a = deque('abc')
        b = deque('cd')
        a.extend(b)
        a
        deque(['a', 'b', 'c', 'c', 'd'])

        a = deque('abc')
        b = deque('cd')
        a.append(b)
        deque(['a', 'b', 'c', deque(['c', 'd'])])
extendleft()
index()   返回 x 在 deque 中的位置（在索引 start 之后，索引 stop 之前）。 返回第一个匹配项，如果未找到则引发 ValueError。
insert()
        在位置 i 插入 x 。
        如果插入会导致一个限长 deque 超出长度 maxlen 的话，就引发一个 IndexError。
        a = deque('abc')
        a.insert(1,'X')
        deque(['a', 'X', 'b', 'c'])
pop()
popleft()
remove(value)
reverse()       逆序
rotate(n=1)     向右循环移动 n 步。 如果 n 是负数，就向左循环
maxlen

heapq包  最小堆
heapq.heapify()
heapq.heappop()
heapq.heappush()


bisect.insort()插入数值











